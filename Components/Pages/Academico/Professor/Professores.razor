@page "/professores"
@using SigaApp.Models
@using Microsoft.AspNetCore.Components.Web
@inject ProfessorDAO professorDAO

<PageTitle>Professores</PageTitle>

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2 class="fw-bold">Professores</h2>
    <div class="d-flex gap-2">
        <a class="btn btn-outline-secondary" href="/professor/relatorios">Relatórios</a>
        <a class="btn btn-primary" href="/cadastro_professor">+ Novo professor</a>
    </div>
</div>

<!-- Filtros -->
<div class="card mb-4 shadow-sm">
    <div class="card-body">
        <form class="row g-2 align-items-center">
            <div class="col-md-4">
                <input class="form-control"
                       @bind="filtroPesquisa"
                       placeholder="Pesquisar por nome, CPF, e-mail..."
                       @onkeydown="OnKeyDownPesquisar" />
            </div>
            <div class="col-md-3">
                <select class="form-select" @bind="filtroDisciplina">
                    <option value="">Todas as disciplinas</option>
                    <option>Português</option>
                    <option>Matemática</option>
                    <option>História</option>
                    <option>Geografia</option>
                    <option>Física</option>
                    <option>Química</option>
                </select>
            </div>
            <div class="col-md-2">
                <select class="form-select" @bind="filtroStatus">
                    <option value="">Status</option>
                    <option>Ativo</option>
                    <option>Inativo</option>
                </select>
            </div>
            <div class="col-md-1 d-grid">
                <button type="button" class="btn btn-outline-primary" @onclick="FiltrarProfessores">Filtrar</button>
            </div>
        </form>
    </div>
</div>

<!-- Lista de professores -->
<div class="row g-4">
    @if (listaFiltrada.Count == 0)
    {
        <div class="text-center text-muted mt-4">
            <p>Nenhum professor encontrado.</p>
        </div>
    }
    else
    {
        @foreach (var professor in listaFiltrada)
        {
            <div class="col-md-6 col-lg-4">
                <div class="card h-100 shadow-sm">
                    <div class="card-body d-flex gap-3">
                        <img src="https://i.pravatar.cc/150?u=@professor.Id" class="rounded-circle" alt="Foto" style="width:80px;height:80px;object-fit:cover;">
                        <div class="flex-fill">
                            <div class="d-flex justify-content-between align-items-start">
                                <div>
                                    <h5 class="mb-1">@professor.Nome</h5>
                                    <small class="text-muted">Professor de @professor.DisciplinaPrincipal</small>
                                </div>
                                <span class="badge @(professor.Status == "Ativo" ? "bg-success" : "bg-secondary")">@professor.Status</span>
                            </div>

                            <div class="mt-2 small text-muted">
                                <div><strong>E-mail:</strong> @professor.Email</div>
                                <div><strong>Telefone:</strong> @professor.Telefone</div>
                                <div><strong>CPF:</strong> @professor.Cpf</div>
                            </div>

                            <div class="mt-3 d-flex gap-2">
                                <a class="btn btn-sm btn-outline-primary" href="/editar_professor/@professor.Id">Editar</a>
                                <a class="btn btn-sm btn-outline-danger" href="/excluir_professor/@professor.Id">Excluir</a>
                                <a class="btn btn-sm btn-outline-secondary" href="/detalhes_professor/@professor.Id">Ver turmas</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
</div>

@code {
    private List<Professor> listaProfessores = new();
    private List<Professor> listaFiltrada = new();

    private string filtroPesquisa = "";
    private string filtroDisciplina = "";
    private string filtroStatus = "";

    protected override void OnInitialized()
    {
        CarregarProfessores();
    }

    private void CarregarProfessores()
    {
        listaProfessores = professorDAO.ListarTodos() ?? new List<Professor>();
        AplicarFiltros();
    }

    private void FiltrarProfessores()
    {
        AplicarFiltros();
    }

    private void AplicarFiltros()
    {
        var pesquisa = (filtroPesquisa ?? "").Trim();

        listaFiltrada = listaProfessores
            .Where(p =>
                (string.IsNullOrWhiteSpace(pesquisa)
                 || p.Nome.Contains(pesquisa, StringComparison.OrdinalIgnoreCase)
                 || (p.Email ?? "").Contains(pesquisa, StringComparison.OrdinalIgnoreCase)
                 || (p.Cpf ?? "").Contains(pesquisa, StringComparison.OrdinalIgnoreCase))
                && (string.IsNullOrWhiteSpace(filtroDisciplina)
                    || (p.DisciplinaPrincipal ?? "").Equals(filtroDisciplina, StringComparison.OrdinalIgnoreCase))
                && (string.IsNullOrWhiteSpace(filtroStatus)
                    || (p.Status ?? "").Equals(filtroStatus, StringComparison.OrdinalIgnoreCase))
            )
            .ToList();
    }

    private void OnKeyDownPesquisar(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            AplicarFiltros();
        }
    }
}

<style>
    *{
    overflow-y: visible !important;
    }
</style>